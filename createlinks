#!/usr/bin/perl -w
#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use esmith::Build::CreateLinks  qw(:all);
# use strict;

# pki certificate path:
my @certificates = (qw(
                /etc/ejabberd/ejabberd.pem
));

#
# nethserver-ejabberd-next-update event
#

event_actions('nethserver-ejabberd-next-update', qw(
              initialize-default-databases   00
));

event_templates('nethserver-ejabberd-next-update', qw(
                /etc/ejabberd/ejabberd.yml
                /etc/ejabberd/ejabberd.cfg
                /etc/dnsmasq.conf
), @certificates);

event_services('nethserver-ejabberd-next-update', qw(
               httpd reload
               ejabberd restart
               dnsmasq restart
));


#--------------------------------------------------
# actions for nethserver-ejabberd-next-save event
#--------------------------------------------------

$event = "nethserver-ejabberd-next-save";

event_services($event, 'ejabberd' => 'restart');
event_services($event, 'httpd' => 'reload');
templates2events("/etc/ejabberd/ejabberd.yml",  $event);


#
# nethserver-sssd-save event
#
event_templates('nethserver-sssd-save',qw(
    /etc/ejabberd/ejabberd.yml
));

event_services('nethserver-sssd-save', qw(
    ejabberd restart
));

#--------------------------------------------------
# actions for tls-policy-save event
#--------------------------------------------------

$event = "tls-policy-save";

event_services($event, 'ejabberd' => 'restart');
templates2events("/etc/ejabberd/ejabberd.yml",  $event);


#--------------------------------------------------
# actions for group-modify group-create group-delete event
# Restart ejabberd on jabberadmins group update
#--------------------------------------------------

foreach $event (qw (group-modify group-create group-delete)){
event_actions($event, 'nethserver-ejabberd-next-update-group' => '95');
}

#--------------------------------------------------
# actions for migration-import event
#--------------------------------------------------

$event = "migration-import";
event_actions($event, 'nethserver-ejabberd-next-migrate' => 50);

#
# certificate-update event
#
event_templates('certificate-update', @certificates);

event_services('certificate-update', qw(
               ejabberd restart
));


#--------------------------------------------------
# actions for pre-backup-data event
#--------------------------------------------------

$event = 'pre-backup-data';

event_actions($event, 'nethserver-ejabberd-next-backup' => 50);

#--------------------------------------------------
# actions for post-restore-data event
#--------------------------------------------------

$event = 'post-restore-data';

event_actions($event, 'nethserver-ejabberd-next-restore' => 50);
event_services($event, 'ejabberd' => 'restart');
